name: Dockerhub CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    # Triggers every week on tuesday night
    - cron:  '0 0 * * 2'

env:
  # Specify which image to build
  DOCKER_REPO: godatadriven/spark

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Specify which tags to build
        DOCKER_TAG: ["3.0.1,3.0,latest", "2.4.5,2.4", "2.3.2,2.3", "2.2.1,2.2", "2.1.2,2.1"]

    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Parse args
        id: args
        run: |
            DOCKER_TAG="${{ matrix.DOCKER_TAG }}"
            
            # Manipulate DOCKER_TAG to create build args
            BUILD_ARGS="SPARK_VERSION=${DOCKER_TAG%%,*}"

            # No modification needed beyond this point
            BUILD_ARGS="${BUILD_ARGS//'%'/'%25'}"
            BUILD_ARGS="${BUILD_ARGS//$'\n'/'%0A'}"
            BUILD_ARGS="${BUILD_ARGS//$'\r'/'%0D'}"

            echo "::set-output name=build_args::$BUILD_ARGS"

      - name: Prepare
        id: prep
        run: |
            DOCKER_TAG="${{ matrix.DOCKER_TAG }}"
            DOCKER_IMAGE_NAME="$DOCKER_REPO:${DOCKER_TAG%%,*}"
            echo ::set-output name=image_name::${DOCKER_IMAGE_NAME}
            
            TAGS="$DOCKER_REPO:${DOCKER_TAG//,/,$DOCKER_REPO:}"
            echo ::set-output name=tags::${TAGS}

            echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Build image
        uses: docker/build-push-action@v2
        with:
         context: .
         file: ./Dockerfile
         push: false
         tags: ${{ steps.prep.outputs.tags }}
         build-args: |
           ${{ steps.args.outputs.build_args }}
         labels: |
           org.opencontainers.image.source=${{ github.event.repository.clone_url }}
           org.opencontainers.image.created=${{ steps.prep.outputs.created }}
           org.opencontainers.image.revision=${{ github.sha }}

      - name: Test image
        env:
            IMAGE_NAME: ${{ steps.prep.outputs.image_name }}
        run: |
            if [[ -f "docker-compose.test.yml" ]]; then
                docker-compose --file docker-compose.test.yml build
                docker-compose --file docker-compose.test.yml run sut
            fi

      - name: Login to DockerHub
        if: github.ref == 'refs/heads/master'
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB }}

      - name: Push image
        if: github.ref == 'refs/heads/master'
        run: |
            docker push $DOCKER_REPO

      - name: Report Status
        if: always() && github.ref == 'refs/heads/master'
        uses: ravsamhq/notify-slack-action@master
        with:
          status: ${{ job.status }}
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_GDD_GENERAL_WEBHOOK }}
